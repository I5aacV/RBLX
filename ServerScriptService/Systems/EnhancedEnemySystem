-- ========================================================================
-- CORRECTED ENHANCED ENEMY SYSTEM - Works with YOUR Actual Code
-- ========================================================================

local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Load the enhanced modules
local EnhancedBossManager = require(ReplicatedStorage.Modules.EnhancedBossManager)
local EnhancedDeathDetector = require(ReplicatedStorage.Modules.EnhancedDeathDetector)

-- Create instances
local bossManager = EnhancedBossManager.new()
local deathDetector = EnhancedDeathDetector.new()

-- Make globally accessible
_G.EnhancedBossManager = bossManager
_G.EnhancedDeathDetector = deathDetector

print("✅ Enhanced systems loaded!")

-- ========================================================================
-- CORRECT INTEGRATION - Hook into YOUR EnemySpawner's spawnEnemy
-- ========================================================================

spawn(function()
	-- Wait for EnemySpawner
	while not _G.EnemySpawner do
		task.wait(0.1)
	end

	print("🔗 Hooking into YOUR EnemySpawner...")

	-- Store original spawnEnemy function
	local originalSpawnEnemy = _G.EnemySpawner.spawnEnemy

	-- Enhanced version that adds death tracking
	_G.EnemySpawner.spawnEnemy = function(self, enemyType, position, roomData)
		-- Call YOUR original spawn function
		local enemy = originalSpawnEnemy(self, enemyType, position, roomData)

		if enemy then
			-- Add enhanced death detection
			deathDetector:trackEnemy(enemy, function(deadEnemy, roomData)
				print("💀 Enhanced death callback for:", deadEnemy.Name)

				-- Check if it's a boss
				if bossManager:isBoss(deadEnemy) then
					print("👑 Boss detected, triggering rewards...")
					bossManager:onBossDefeated(deadEnemy, roomData.model)
				end

				-- Use YOUR RoomManager for death handling (correct approach)
				if _G.RoomManager then
					_G.RoomManager:removeEnemyFromRoom(roomData, deadEnemy)
				end
			end, roomData)

			print("🔗 Enhanced tracking added for:", enemy.Name)
		end

		return enemy
	end

	print("✅ Enhanced integration complete!")
end)

-- Rest of your debug commands stay the same...
_G.TestBossRewardAdvanced = function(roomName, bossType)
	local roomModel = workspace:FindFirstChild(roomName or "BossRoom_7_5")
	if not roomModel then
		print("❌ Room not found")
		return false
	end

	local testBoss = Instance.new("Model")
	testBoss.Name = "Boss_" .. (bossType or "Monstro")

	local part = Instance.new("Part")
	part.Name = "HumanoidRootPart"
	part.Size = Vector3.new(4, 4, 4)
	part.Position = Vector3.new(0, 5, 0)
	part.Parent = testBoss

	bossManager:onBossDefeated(testBoss, roomModel)
	print("🧪 Boss reward test triggered!")
	return true
end

_G.EnhancedSystemStatus = function()
	print("🎯 ENHANCED SYSTEM STATUS:")
	print("  👹 EnemySpawner:", _G.EnemySpawner and "✅" or "❌")
	print("  👑 BossManager:", bossManager and "✅" or "❌")
	print("  💀 DeathDetector:", deathDetector and "✅" or "❌")
	print("  🏠 RoomManager:", _G.RoomManager and "✅" or "❌")

	if deathDetector then
		print("  💀 Tracked enemies:", deathDetector:getTrackedEnemyCount())
	end

	return true
end

print("🚀 Corrected enhanced system ready!")
